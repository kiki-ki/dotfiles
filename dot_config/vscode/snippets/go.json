{
	"print to console": {
		"prefix": "fff",
		"body": [
			"fmt.Printf(\"%#v\\n\", $1)"
		],
		"description": "Log output to console"
	},
	"table driven test": {
		"prefix": "tdt",
		"body": [
			"func Test$1Service_$2(t *testing.T) {",
			"\tctx := context.Background()",
			"\ttx := prepareDB(\"Test$1Service_$2\")",
			"\tdefer tx.Close()",
			"",
			"\tservice := get$1Service(t, tx)",
			"",
			"\ttestUser1 := factory.CreateUser(tx)",
			"",
			"\ttests := []struct {",
			"\t\tdesc string",
			"\t\tinput *$3.$2Input",
			"\t\twantResp *output.$1",
			"\t\twantErr error",
			"\t}{",
			"\t\t{",
			"\t\t\tdesc: \"\",",
			"\t\t\tinput: &$3.$2Input{},",
			"\t\t\twantResp: &output.$1{},",
			"\t\t\twantErr: nil,",
			"\t\t},",
			"\t}",
			"\tfor _, tt := range tests {",
			"\t\tt.Run(tt.desc, func(t *testing.T) {",
			"\t\t\t// act",
			"\t\t\tgot, err := service.$2(ctx, tt.input)",
			"",
			"\t\t\t// except",
			"\t\t\ttestutil.AssertError(t, err, tt.wantErr)",
			"\t\t\ttestutil.AssertResponse(t, got, tt.wantResp)",
			"\t\t})",
			"\t}",
			"}",
		],
		"description": "table driben test for Human interface"
	},
}
